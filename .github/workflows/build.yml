name: Build

on:
  push:
    branches: ["os-fork-6.2*"]

jobs:
  build-linux:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Install Dependencies
      shell: bash
      run: |
        sudo apt update
        sudo apt install -y sudo git cmake libboost-dev g++ build-essential libssl-dev default-jdk python3 python3-pip liblz4-dev
        sudo pip3 install virtualenv
        sudo apt install -y dirmngr gnupg apt-transport-https ca-certificates
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        sudo sh -c 'echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" > /etc/apt/sources.list.d/mono-official-stable.list'
        sudo apt update
        sudo apt install -y mono-complete

    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/bld

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/bld
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake -D FDB_RELEASE=ON -D GENERATE_DEBUG_PACKAGES=OFF ${{github.workspace}}
      
    - name: Get CPack variables
      working-directory: ${{github.workspace}}/bld
      run: |
        grep set CPackConfig.cmake | sed 's/set.//;s/")$//;s/^ *//;s/ "/=/' >>$GITHUB_ENV
        
    - name: Test cpack variables
      run:
        echo "client ${{ env.CPACK_RPM_CLIENTS-EL7_FILE_NAME }}"
        echo "server ${{ env.CPACK_RPM_SERVER-EL7_FILE_NAME }}"

#    - name: Build
#      working-directory: ${{github.workspace}}/bld
#      shell: bash
#      # Execute the build.  You can specify a specific target with "--target <NAME>"
#      run: make -j 2

#    - name: Build rpm
#      working-directory: ${{github.workspace}}/bld
#      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
#      run: cpack -G RPM

#    - name: Upload the Result
#      uses: actions/upload-artifact@v2
#      with:
#        name: foundationdb-rpms.zip
#        path: ${{github.workspace}}/bld/packages/foundationdb-*.rpm*
